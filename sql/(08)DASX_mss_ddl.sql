IF NOT EXISTS ( SELECT 1 FROM SYSOBJECTS WHERE NAME = 'TAGDIM'  AND TYPE ='U')
CREATE TABLE TAGDIM (
	ID VARCHAR ( 36 ) NOT NULL PRIMARY KEY,
	DIMCODE VARCHAR ( 36 ) NOT NULL,
	DIMNAME VARCHAR ( 64 ) NOT NULL,
	DESCRIPTIONS VARCHAR ( 256 ),
	PID VARCHAR ( 36 ) NOT NULL,
	ORDERID INT 
)
go

IF NOT EXISTS ( SELECT 1 FROM SYSOBJECTS WHERE NAME = 'TAGMANAGEMENT'  AND TYPE ='U' )
CREATE TABLE TAGMANAGEMENT (
	ID VARCHAR ( 36 ) NOT NULL PRIMARY KEY,
	TAGCODE VARCHAR( 36 ) NOT NULL,
	CAPTION VARCHAR ( 200 ) NOT NULL,
	TAGGROUP VARCHAR ( 36 ) NOT NULL,
	DESCRIPTIONS VARCHAR ( 256 ),
	CREATOR VARCHAR ( 36 ),
	CREATETIME DATETIME,
	UPDATOR VARCHAR ( 36 ),
	UPDATETIME DATETIME,
	STATES INT
)
go

IF NOT EXISTS(Select 1 From SYSOBJECTS Where Name='DATAELEMENT'  AND TYPE ='U')  
CREATE TABLE DATAELEMENT 
(
	ID VARCHAR(36) NOT NULL PRIMARY KEY          ,
	CODE VARCHAR(30) NOT NULL              ,          
	CHNAME VARCHAR(36) NOT NULL                 ,          
	CHCHARACTER VARCHAR(100)            ,          
	ENNAME VARCHAR(36) NOT NULL                 ,          
	VERSIONS VARCHAR(3)                   ,          
	EXPLAINS VARCHAR(100) NOT NULL                 ,          
	OBJECTCLASSWORDS VARCHAR(36)      ,          
	FEATUREWORDS  VARCHAR(36)           ,          
	EXPRESSIONWORD  VARCHAR(36)         ,          
	DATATYPE  INT NOT NULL               ,          
	DATAFORMAT VARCHAR(36)              ,          
	NUMRANGE  VARCHAR(36)                       ,          
	SUBORDINATEELEMENT  VARCHAR(36)     ,          
	STATES  INT                    ,          
	FIELDCRITERIA   VARCHAR(36)                 ,          
	MEASURINGUNIT    VARCHAR(36)                ,          
	ORGID      VARCHAR(36)               ,          
	CONTEXT VARCHAR(100)                         ,          
	APPLYCONSTRAINTS VARCHAR(100)               ,          
	REMARKS  VARCHAR(500)                      ,
	DATALENGTH INT ,
	PRECISION  INT ,
	ISEMPTY    INT ,
	CREATETIME  DATETIME ,
	LASTMODIFYTIME  DATETIME
)
go

IF NOT EXISTS(Select 1 From SYSOBJECTS Where Name='DATAELEMENTGROUPMAPPING'  AND TYPE ='U')  
CREATE TABLE DATAELEMENTGROUPMAPPING
	(
		ID VARCHAR(36) NOT NULL PRIMARY KEY,
        DATAELEMENTID VARCHAR(36) NOT NULL,
	    DATAELEMENTCLASSIFYID VARCHAR(36) NOT NULL
	)
go

IF NOT EXISTS ( SELECT 1 FROM SYSOBJECTS WHERE NAME = 'DATAELEMENTCLASSIFY'  AND TYPE ='U')
CREATE TABLE DATAELEMENTCLASSIFY (
	ID VARCHAR ( 36 ) NOT NULL PRIMARY KEY,
	CODE VARCHAR ( 36 )NOT NULL,
	CAPTION VARCHAR ( 100 )NOT NULL,
	PARENTID VARCHAR ( 36 )NOT NULL,
	SORTNUMBER INT NOT NULL,
	DESCRIPTION VARCHAR ( 200 ),
	CREATETIME DATETIME NOT NULL,
	LASTMODIFYTIME DATETIME
)
go

IF NOT EXISTS ( SELECT 1 FROM SYSOBJECTS WHERE NAME = 'DSM_ENTABLECLASSIFY'  AND TYPE ='U')
CREATE TABLE DSM_ENTABLECLASSIFY (
	ID VARCHAR ( 36 ) NOT NULL PRIMARY KEY,
	CODE VARCHAR ( 36 )NOT NULL,
	CAPTION VARCHAR ( 100 )NOT NULL,
	PARENTID VARCHAR ( 36 )NOT NULL,
	SORTNUMBER INT NOT NULL,
	DESCRIPTION VARCHAR ( 200 ),
	CREATETIME DATETIME NOT NULL,
	LASTMODIFYTIME DATETIME
)
go

IF NOT EXISTS(Select 1 From SYSOBJECTS Where Name='DSM_ENTABLEGROUPMAPPING'  AND TYPE ='U')  
CREATE TABLE DSM_ENTABLEGROUPMAPPING
	(
		ID VARCHAR(36) NOT NULL PRIMARY KEY,
        ENTABLE_ID VARCHAR(36) NOT NULL,
	   	ENTABLECLASSIFYID VARCHAR(36) NOT NULL
	)
go

IF NOT EXISTS ( SELECT 1 FROM sysobjects WHERE NAME = 'CATALOGCLASSIFY' AND TYPE ='U' )
CREATE TABLE CATALOGCLASSIFY (
    id VARCHAR ( 36 ) NOT NULL PRIMARY KEY,
    classifycode VARCHAR ( 36 ) NOT NULL,
    classifyname VARCHAR ( 100 ) NOT NULL,
    descriptions VARCHAR ( 256 ),
    pid VARCHAR ( 36 ),
	contactperson VARCHAR ( 36 ),
	phone VARCHAR ( 18 ),
	mobilephone VARCHAR ( 11 ),
	email VARCHAR (128),
    orderid int,
    systemdata int,
	createtime DATETIME,
	updatetime DATETIME
)
go

IF NOT EXISTS ( SELECT 1 FROM SYSOBJECTS WHERE NAME = 'DATACATALOG'  AND TYPE ='U')
CREATE TABLE DATACATALOG
  (
    ID VARCHAR(36) NOT NULL PRIMARY KEY,
    RESOURCECODE VARCHAR (128) NOT NULL,
    RESOURCENAME VARCHAR (128) NOT NULL,
    RESOURCETYPEID VARCHAR (36),
    RESOURCETYPENAME VARCHAR (256),
    RESOURCEPROVIDERSUB VARCHAR (128),
    RESOURCEPROVIDERCODE VARCHAR (128) NOT NULL,
    RESOURCEPROVIDER VARCHAR (250) NOT NULL,
    RESOURCEABSTRACT VARCHAR (256),
    RESOURCEFORMAT VARCHAR (64) NOT NULL,
    DATAITEMINFO VARCHAR (36) NOT NULL,
    SHARETYPE INT NOT NULL,
    SHARECONDITION VARCHAR (256),
    SHAREMODE VARCHAR (64) NOT NULL,
    SHAREMODETYPE INT NOT NULL,
    OPENSOCIETY INT NOT NULL,
    OPENCODITION VARCHAR (256),
    RENEWALCYCLE VARCHAR (64) NOT NULL,
    RELEASEDATE DATE NOT NULL,
    RELATEDRESOURCECODE VARCHAR (128),
	ISAPPROVAL INT,
	SYSTEMDATA INT not null,
	CREATETIME DATETIME not null,
	UPDATETIME DATETIME not null
  )
go

IF NOT EXISTS ( SELECT 1 FROM SYSOBJECTS WHERE NAME = 'APPROVALLOG'  AND TYPE ='U')
CREATE TABLE APPROVALLOG
  (
    ID VARCHAR(36) NOT NULL PRIMARY KEY,
    CATALOGID VARCHAR (36) NOT NULL,
    ISAPPROVAL INT NOT NULL,
    APPROVALTIME DATETIME NOT NULL,
    APPROVALOPINION VARCHAR (256),
    APPROVER VARCHAR (36)
  )
go

IF NOT EXISTS ( SELECT 1 FROM SYSOBJECTS WHERE NAME = 'CATALOGRELATION'  AND TYPE ='U')
CREATE TABLE CATALOGRELATION
  (
    ID VARCHAR(36) NOT NULL PRIMARY KEY,
    RESOURCETYPEID VARCHAR(36) NOT NULL,
    RESOURCEID VARCHAR(36) NOT NULL
  )
go

IF NOT EXISTS ( SELECT 1 FROM SYSOBJECTS WHERE NAME = 'CATALOGDATAITEM'  AND TYPE ='U')
CREATE TABLE CATALOGDATAITEM
  (
   ID VARCHAR(36) NOT NULL PRIMARY KEY,
    CATALOGID VARCHAR(36) NOT NULL,
    DATAITEMNAME VARCHAR(256) NOT NULL,
    DATAITEMCODE VARCHAR(128) NOT NULL,
    DATAITEMTYPE VARCHAR(64) NOT NULL,
    DATAITEMLENGTH INT,
    DATAITEMPRECISION INT,
	SORTNUMBER INT NOT NULL,
 	SHARETYPE INT,
    SHARECONDITION VARCHAR (256),
    SHAREMODE VARCHAR (64),
    SHAREMODETYPE INT,
    OPENSOCIETY INT,
    OPENCODITION VARCHAR (256),
    RENEWALCYCLE VARCHAR (64),
    INDX_ID VARCHAR(64),
    DATASOURCEID VARCHAR(36),
    ENTABLEID VARCHAR(36),
    FIELD_ID VARCHAR(36),
    DATASTAND VARCHAR(36),
    CREATETIME DATETIME NOT NULL,
    UPDATETIME DATETIME NOT NULL,
    ISUNSTRUCTURED INT default 0 not null 
  )
go

IF NOT EXISTS ( SELECT 1 FROM SYSOBJECTS WHERE NAME = 'RESOURCELINKINGFILE'  AND TYPE ='U')
CREATE TABLE RESOURCELINKINGFILE (
    ID VARCHAR(36) NOT NULL PRIMARY KEY,
    DATACATALOGID VARCHAR(36) NOT NULL,
    FILENAME VARCHAR(128) NOT NULL,
    DESCRIPTIONS VARCHAR(1000),
    FILETYPE VARCHAR(128),
    FILESIZE INT,
 	REALPATH VARCHAR(255),
    MD5 VARCHAR (32),
    DATAIDENTIFICATION VARCHAR (1000),
    FIELDID VARCHAR(36),
    CREATETIME DATETIME,
    UPDATETIME DATETIME,
    SOURCETYPE VARCHAR(1)
  )
go

IF NOT EXISTS ( SELECT 1 FROM SYSOBJECTS WHERE NAME = 'FILEIDENTIFICATION'  AND TYPE ='U')
CREATE TABLE FILEIDENTIFICATION (
    ID VARCHAR(36) NOT NULL PRIMARY KEY,
    RESOURCELINKINGFILEID VARCHAR(36) NOT NULL,
    DATACATALOGID VARCHAR(36) NOT NULL,
    IDENTIFICATIONKEY VARCHAR(128) NOT NULL,
    IDENTIFICATIONVAL VARCHAR(255) NOT NULL
  )
go

IF NOT EXISTS(Select 1 From Sysobjects Where Name='DBREPORTLOG' AND TYPE ='U')  
create table DBREPORTLOG
(
  ID VARCHAR(36) PRIMARY KEY,
  TEMPID VARCHAR(36) not null,
  STATUS INT,
  EXECUTEWAY INT,
  LOG TEXT,
  scheduleTaskId varchar(64),
  CREATOR VARCHAR(36),
  CREATETIME DATETIME,
  SERVERIP varchar(126),
  REPORTURL varchar(500)
)
go

IF NOT EXISTS ( SELECT 1 FROM SYSOBJECTS WHERE NAME = 'LINKDATASERVICE'  AND TYPE ='U')
CREATE TABLE LINKDATASERVICE (
  ID VARCHAR(36) NOT NULL PRIMARY KEY,
  DATACATALOGID varchar(36),
  DATASERVICEID varchar(36),
  DATASERVICENAME varchar(255)
 )
go

IF NOT EXISTS ( SELECT 1 FROM SYSOBJECTS WHERE NAME = 'BINTERFACEGROUP'  AND TYPE ='U')
CREATE TABLE BINTERFACEGROUP (
	ID VARCHAR ( 36 ) NOT NULL PRIMARY KEY,
	CODE VARCHAR ( 36 )NOT NULL,
	CAPTION VARCHAR ( 100 )NOT NULL,
	PARENTID VARCHAR ( 36 )NOT NULL,
	DESCRIPTION VARCHAR ( 500 ),
	STATE varchar(16) NOT NULL
)
go



IF NOT EXISTS ( SELECT 1 FROM SYSOBJECTS WHERE NAME = 'BINTERFACEGROUPMAPPING'  AND TYPE ='U')
CREATE TABLE BINTERFACEGROUPMAPPING (
	ID VARCHAR ( 36 ) NOT NULL PRIMARY KEY,
	GROUPID VARCHAR ( 36 )NOT NULL,
	BINTERFACEID VARCHAR ( 36 )NOT NULL
)
go

IF NOT EXISTS(Select 1 From Sysobjects Where Name='DBACCEPTLOG' AND TYPE ='U')
CREATE TABLE DBACCEPTLOG(
    ID VARCHAR(36) NOT NULL PRIMARY KEY,
    FILENAME VARCHAR(256) NOT NULL ,
    FILEPATH VARCHAR(500) NOT NULL ,
    CORPCODE VARCHAR(128) NOT NULL,
    STATUS INT NOT NULL ,
    EXECUTEWAY INT NOT NULL ,
    SERVERIP VARCHAR(126),
    LOGDETAIL TEXT ,
    DATANUM INT ,
    CREATETIME DATETIME  NOT NULL ,
)
go

IF NOT EXISTS(Select 1 From Sysobjects Where Name='RESTEMP' AND TYPE ='U')
CREATE TABLE RESTEMP(
        ID VARCHAR(36) PRIMARY KEY,
        FILENAME VARCHAR(256) NOT NULL ,
        BUSTYPE VARCHAR(32),
        SAVEPATH VARCHAR(1000) NOT NULL,
        FETCHFLAG VARCHAR(1),
        TYPEFLAG VARCHAR(1),
        CREATETIME  DATETIME,
	    FETCHTIME   DATETIME
)
go




IF NOT EXISTS(Select 1 From Sysobjects Where Name='CHANNELLOG' AND TYPE ='U')
CREATE TABLE CHANNELLOG(
        ID VARCHAR(36) PRIMARY KEY,
      	IP VARCHAR(64),
    	fileName VARCHAR(256),
      	TRANSFERFLAG VARCHAR(1),
      	PROVIDERURL VARCHAR(256),
      	CALLURL VARCHAR(256),
	    LOGCONTENT TEXT,
      	CREATETIME  DATETIME
)
go


IF NOT EXISTS(SELECT 1 FROM SYSOBJECTS WHERE NAME='DMP_ZJUSELINK' AND TYPE ='U')
CREATE TABLE DMP_ZJUSELINK
(
    ID VARCHAR(36)  NOT NULL    PRIMARY KEY  ,
    GZWUSECODE VARCHAR(6)  NOT NULL    UNIQUE  ,
    GZWUSENAME VARCHAR(500)  NOT NULL  ,
    QYUSECODE VARCHAR(6) ,
    QYUSENAME VARCHAR(500)
)
go

IF NOT EXISTS(SELECT 1 FROM SYSOBJECTS WHERE NAME='DMP_ZWKMLINK' AND TYPE ='U')
CREATE TABLE DMP_ZWKMLINK
(
    ID VARCHAR(36)  NOT NULL    PRIMARY KEY  ,
    GZWKMBH VARCHAR(50)  NOT NULL    UNIQUE  ,
    GZWKMMC VARCHAR(200)  NOT NULL  ,
    QYKMBH VARCHAR(50) ,
    QYKMMC VARCHAR(200)
)
go

IF NOT EXISTS(SELECT 1 FROM SYSOBJECTS WHERE NAME='DMP_ZWBZLINK' AND TYPE ='U')
CREATE TABLE DMP_ZWBZLINK
(
    ID VARCHAR(36)  NOT NULL    PRIMARY KEY  ,
    GZWWBBH VARCHAR(20)  NOT NULL    UNIQUE  ,
    GZWWBMC VARCHAR(200)  NOT NULL  ,
    QYWBBH VARCHAR(20) ,
    QYWBMC VARCHAR(200)
)
go


IF NOT EXISTS ( SELECT 1 FROM SYSOBJECTS WHERE NAME = 'DATACATALOG_VERSION'  AND TYPE ='U')
CREATE TABLE DATACATALOG_VERSION
  (
    ID VARCHAR(36) NOT NULL,
    RESOURCECODE VARCHAR (128) NOT NULL,
    RESOURCENAME VARCHAR (128) NOT NULL,
    RESOURCETYPEID VARCHAR (36),
    RESOURCETYPENAME VARCHAR (256),
    RESOURCEPROVIDERSUB VARCHAR (128),
    RESOURCEPROVIDERCODE VARCHAR (128) NOT NULL,
    RESOURCEPROVIDER VARCHAR (250) NOT NULL,
    RESOURCEABSTRACT VARCHAR (256),
    RESOURCEFORMAT VARCHAR (64) NOT NULL,
    DATAITEMINFO VARCHAR (36) NOT NULL,
    SHARETYPE INT NOT NULL,
    SHARECONDITION VARCHAR (256),
    SHAREMODE VARCHAR (64) NOT NULL,
    SHAREMODETYPE INT NOT NULL,
    OPENSOCIETY INT NOT NULL,
    OPENCODITION VARCHAR (256),
    RENEWALCYCLE VARCHAR (64) NOT NULL,
    RELEASEDATE DATE NOT NULL,
    RELATEDRESOURCECODE VARCHAR (128),
    ISAPPROVAL INT,
    SYSTEMDATA INT not null,
    CREATETIME DATETIME not null,
    UPDATETIME DATETIME not null,
    DATACATALOG_VERSIONID VARCHAR(36) NOT NULL
  )
go

IF NOT EXISTS ( SELECT 1 FROM SYSOBJECTS WHERE NAME = 'CATALOGDATAITEM_VERSION'  AND TYPE ='U')
CREATE TABLE CATALOGDATAITEM_VERSION
  (
   ID VARCHAR(36) NOT NULL,
    CATALOGID VARCHAR(36) NOT NULL,
    DATAITEMNAME VARCHAR(256) NOT NULL,
    DATAITEMCODE VARCHAR(128) NOT NULL,
    DATAITEMTYPE VARCHAR(64) NOT NULL,
    DATAITEMLENGTH INT,
    DATAITEMPRECISION INT,
	  SORTNUMBER INT NOT NULL,
 	  SHARETYPE INT,
    SHARECONDITION VARCHAR (256),
    SHAREMODE VARCHAR (64),
    SHAREMODETYPE INT,
    OPENSOCIETY INT,
    OPENCODITION VARCHAR (256),
    RENEWALCYCLE VARCHAR (64),
    INDX_ID VARCHAR(64),
    DATASOURCEID VARCHAR(36),
    ENTABLEID VARCHAR(36),
    FIELD_ID VARCHAR(36),
    DATASTAND VARCHAR(36),
    CREATETIME DATETIME NOT NULL,
    UPDATETIME DATETIME NOT NULL,
	  ISUNSTRUCTURED INT NOT NULL default 0,
	  CATALOGDATAITEM_VERSIONID VARCHAR(36) NOT NULL
  )
go

IF NOT EXISTS(Select 1 From Sysobjects Where Name='DATACATALOG_VERSIONINFO' AND TYPE ='U')
create table DATACATALOG_VERSIONINFO
(
  VERSION_ID VARCHAR(36) not null PRIMARY KEY  ,
  VERSION_CREATETIME DATETIME not null,
  VERSION_CREATOR VARCHAR(36) not null,
  VERSION_DESC VARCHAR(800) null
)
go


-- 数据字典分类
if not exists(select * from syscolumns
where id=object_id('DSM_ENTABLECLASSIFY') and name='PREMAKE')
    begin
        ALTER TABLE DSM_ENTABLECLASSIFY ADD PREMAKE tinyint DEFAULT 0 NULL
    end
go

-- 数据字典
if not exists(select * from syscolumns
where id=object_id('DSM_ENTABLE') and name='PREMAKE')
    begin
        ALTER TABLE DSM_ENTABLE ADD PREMAKE tinyint DEFAULT 0 NULL
    end
go
